.tetheredElement {
  z-index: 10001;
}

.container {
  background: var(--input-background);
  display: flex;
  flex-direction: row;
  align-items: center;
  border: 1px solid var(--input-border-color);
  border-radius: var(--input-border-radius);
  box-shadow: 0 0 0 0 transparent;
  padding: 0.25em 0.5em;
  box-shadow: 0 0 0 0 var(--input-box-shadow-color);
  transition: all var(--input-animation-time);
  
  margin: 1em;

  &:hover {
    background: var(--input-hover-background);
    box-shadow: 0 0 0 2px var(--input-box-shadow-hover-color);
    border: 1px solid var(--input-border-hover-color);

    .input, .value {
      background: var(--input-hover-background);
    }
  }

  &.focused {
    background: var(--input-focused-background);
    border: 1px solid var(--input-border-focused-color);
    box-shadow: 0 0 0 2px var(--input-box-shadow-focused-color);
    border-radius: var(--input-border-radius) var(--input-border-radius) 0 0;

    .input, .value {
      background: var(--input-focused-background);
    }
  }

  &:not(.hasInputValue) {
    &.hasValue {
      .input {
        width: 0;
        flex-grow: 0;
      }
      &.focused .cursor {
        width: 1px;
      }
    }
  }
  &.hasInputValue, &.hasValue {
    .clearButton {
      height: 0.5em;
      width: auto;
    }
  }
  &.hasInputValue .value {
    width: 0;
    flex-grow: 0;
  }

  .input, .value {
    background: var(--input-background);
  }
}

.content {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-grow: 1;
  min-width: 0;
  flex-basis: auto;
  position: relative;
}

.button, .clearButton {
  margin: 0.5em 0 0.5em 0.375em;
  flex-shrink: 0;
}
.clearButton {
  height: 0;
  width: 0;
}

.input, .value {
  display: block;
  background: #fff;
  border: none;
  outline: 0;
  font-size: 1em;
  padding: 0;
  margin: 0;
  min-width: 0;
  min-height: 1.5em;
  line-height: 1.5em;
  flex-grow: 1;
  flex-basis: 0;
  color: var(--input-text-color);
  overflow: hidden;
  transition: all var(--input-animation-time);
}

.cursor {
  position: absolute;
  top: 50%;
  left: 0;
  bottom: 0;
  width: 0;
  height: 1em;
  background: var(--input-text-color);
  flex-shrink: 0;
  flex-grow: 0;
  animation-name: blink;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-timing-function: step-end;
  transform: translate(0, -50%);
}


@keyframes blink {
  from, to { opacity: 0; }
  50% { opacity: 1; }
}